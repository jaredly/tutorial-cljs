;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name reepl.show-function, :imports nil, :requires {pprint cljs.pprint, helpers reepl.helpers, reepl.helpers reepl.helpers, reagent.core reagent.core, r reagent.core, devtools devtools.format, cljs.pprint cljs.pprint, devtools.format devtools.format, str clojure.string, clojure.string clojure.string}, :uses nil, :defs {get-function-forms {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :line 36, :column 7, :end-line 36, :end-column 25, :arglists (quote ([fn]))}, :name reepl.show-function/get-function-forms, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :end-column 25, :method-params ([fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fn]))}, str-fn-forms {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :line 51, :column 7, :end-line 51, :end-column 19, :arglists (quote ([forms]))}, :name reepl.show-function/str-fn-forms, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :end-column 19, :method-params ([forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([forms]))}, recover-cljs-name {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :line 20, :column 7, :end-line 20, :end-column 24, :arglists (quote ([parts]))}, :name reepl.show-function/recover-cljs-name, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :end-column 24, :method-params ([parts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([parts]))}, show-fn {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :line 71, :column 7, :end-line 71, :end-column 14, :arglists (quote ([f config show-value]))}, :name reepl.show-function/show-fn, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :end-column 14, :method-params ([f config show-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f config show-value]))}, view {:name reepl.show-function/view, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :line 13, :column 1, :end-line 13, :end-column 10, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :line 13, :column 6, :end-line 13, :end-column 10}}, get-fn-name {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :line 44, :column 7, :end-line 44, :end-column 18, :arglists (quote ([fn]))}, :name reepl.show-function/get-fn-name, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :end-column 18, :method-params ([fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fn]))}, text {:name reepl.show-function/text, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :line 14, :column 1, :end-line 14, :end-column 10, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :line 14, :column 6, :end-line 14, :end-column 10}}, show-fn-with-docs {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :line 55, :column 7, :end-line 55, :end-column 24, :arglists (quote ([get-doc fn _ _]))}, :name reepl.show-function/show-fn-with-docs, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :end-column 24, :method-params ([get-doc fn _ _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 4, :fn-var true, :arglists (quote ([get-doc fn _ _]))}, cljs-fn-prefix {:name reepl.show-function/cljs-fn-prefix, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :line 17, :column 1, :end-line 17, :end-column 20, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :line 17, :column 6, :end-line 17, :end-column 20}}, get-fn-summary {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :line 30, :column 7, :end-line 30, :end-column 21, :arglists (quote ([fn]))}, :name reepl.show-function/get-fn-summary, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :end-column 21, :method-params ([fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fn]))}, button {:name reepl.show-function/button, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :line 15, :column 1, :end-line 15, :end-column 12, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :line 15, :column 6, :end-line 15, :end-column 12}}, get-cljs-arities {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :line 25, :column 7, :end-line 25, :end-column 23, :arglists (quote ([fn]))}, :name reepl.show-function/get-cljs-arities, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :end-column 23, :method-params ([fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fn]))}, styles {:name reepl.show-function/styles, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :line 9, :column 1, :end-line 9, :end-column 12, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/reepl/show_function.cljs", :line 9, :column 6, :end-line 9, :end-column 12}}}, :require-macros {pprint cljs.pprint, cljs.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{:color :else :function-docs :function :function-body :function-arities :function-head}, :order [:function :color :else :function-docs :function-head :function-arities :function-body]}, :doc nil}