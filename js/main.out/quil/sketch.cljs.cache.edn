;; Analyzed by ClojureScript 1.7.228
{:use-macros {with-sketch quil.sketch}, :excludes #{}, :name quil.sketch, :imports nil, :requires {u quil.util, quil.util quil.util, quil.middlewares.deprecated-options quil.middlewares.deprecated-options, dom goog.dom, goog.dom goog.dom, events goog.events, goog.events goog.events, EventType goog.events.EventType, goog.events.EventType goog.events.EventType}, :uses {deprecated-options quil.middlewares.deprecated-options}, :defs {current-applet {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :line 12, :column 7, :end-line 12, :end-column 21, :arglists (quote ([]))}, :name quil.sketch/current-applet, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, make-sketch {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :line 49, :column 7, :end-line 49, :end-column 18, :arglists (quote ([options]))}, :name quil.sketch/make-sketch, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :end-column 18, :method-params ([options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([options]))}, sketch {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :line 81, :column 7, :end-line 81, :end-column 13, :arglists (quote ([& opts])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(opts)], :arglists ([& opts]), :arglists-meta (nil)}}, :name quil.sketch/sketch, :variadic true, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(opts)], :arglists ([& opts]), :arglists-meta (nil)}, :method-params [(opts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 0, :fn-var true, :arglists ([& opts])}, bind-handlers {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :line 27, :column 8, :end-line 27, :end-column 21, :private true, :arglists (quote ([prc opts]))}, :private true, :name quil.sketch/bind-handlers, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :end-column 21, :method-params ([prc opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 2, :fn-var true, :arglists (quote ([prc opts]))}, empty-body? {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :line 96, :column 7, :end-line 96, :end-column 18, :arglists (quote ([]))}, :name quil.sketch/empty-body?, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, rendering-modes {:name quil.sketch/rendering-modes, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :line 14, :column 1, :end-line 15, :end-column 18, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :line 15, :column 3, :end-line 15, :end-column 18}}, size {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :line 20, :column 7, :end-line 20, :end-column 11, :arglists (quote ([width height] [width height mode])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([width height] [width height mode]), :arglists ([width height] [width height mode]), :arglists-meta (nil nil)}}, :name quil.sketch/size, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([width height] [width height mode]), :arglists ([width height] [width height mode]), :arglists-meta (nil nil)}, :method-params ([width height] [width height mode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 3, :fn-var true, :arglists ([width height] [width height mode])}, add-sketch-to-init-list {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :line 114, :column 7, :end-line 114, :end-column 30, :arglists (quote ([sk]))}, :name quil.sketch/add-sketch-to-init-list, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :end-column 30, :method-params ([sk]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sk]))}, sketch-init-list {:name quil.sketch/sketch-init-list, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :line 94, :column 1, :end-line 94, :end-column 22, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :line 94, :column 6, :end-line 94, :end-column 22}}, init-sketches {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :line 107, :column 7, :end-line 107, :end-column 20, :arglists (quote ([]))}, :name quil.sketch/init-sketches, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, resolve-renderer {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :line 17, :column 7, :end-line 17, :end-column 23, :arglists (quote ([mode]))}, :name quil.sketch/resolve-renderer, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :end-column 23, :method-params ([mode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([mode]))}, *applet* {:name quil.sketch/*applet*, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :line 9, :column 1, :end-line 10, :end-column 11, :dynamic true, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :line 10, :column 3, :end-line 10, :end-column 11, :dynamic true}}, add-canvas {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :line 102, :column 7, :end-line 102, :end-column 17, :arglists (quote ([canvas-id]))}, :name quil.sketch/add-canvas, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/quil/sketch.cljs", :end-column 17, :method-params ([canvas-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([canvas-id]))}}, :require-macros {quil.sketch quil.sketch, u quil.util, quil.util quil.util}, :cljs.analyzer/constants {:seen #{:features :key-typed :mouse-clicked :mouse-released :fn :mouse-exited :java2d :mouse-wheel :keyPressed :opengl :mouse-moved :mouseOut :mouseScrolled :mouseDragged :renderer :size :setup :mouse-pressed :middleware :global-key-events :host :mouse-entered :key-pressed :key-released :keyReleased :mouseClicked :p2d :mouseReleased :mousePressed :mouseMoved :mouseOver :host-id :keyTyped :draw :p3d :mouse-dragged}, :order [:java2d :p2d :p3d :opengl :keyPressed :mouseOut :mouseScrolled :mouseDragged :setup :keyReleased :mouseClicked :mouseReleased :mousePressed :mouseMoved :mouseOver :keyTyped :draw :key-pressed :mouse-exited :mouse-wheel :mouse-dragged :key-released :mouse-clicked :mouse-released :mouse-pressed :mouse-moved :mouse-entered :key-typed :size :middleware :renderer :features :global-key-events :host :host-id :fn]}, :doc nil}