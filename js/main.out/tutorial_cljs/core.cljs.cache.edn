;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name tutorial-cljs.core, :imports nil, :requires {show-devtools reepl.show-devtools, replumb replumb.core, parinfer-codemirror.editor parinfer-codemirror.editor, clojure.zip clojure.zip, tutorial-cljs.inline-eval tutorial-cljs.inline-eval, tutorial-cljs.editor tutorial-cljs.editor, tutorial-cljs.text.webgl tutorial-cljs.text.webgl, reepl reepl.core, tutorial-cljs.text.reagent tutorial-cljs.text.reagent, cljs.tools.reader cljs.tools.reader, reepl-replumb reepl.replumb, reepl.core reepl.core, reagent.core reagent.core, r reagent.core, text-cljs tutorial-cljs.text.cljs, cljs.js cljs.js, jsc cljs.js, tutorial-cljs.text.cljs tutorial-cljs.text.cljs, quil-sketch tutorial-cljs.quil-sketch, text-quil tutorial-cljs.text.quil, inline-eval tutorial-cljs.inline-eval, replumb.core replumb.core, parinfer parinfer-codemirror.editor, show-value reepl.show-value, devtools devtools.core, cljsjs.codemirror cljsjs.codemirror, text-reagent tutorial-cljs.text.reagent, quil.core quil.core, quil.middleware quil.middleware, reepl.show-value reepl.show-value, reepl.replumb reepl.replumb, reepl.show-function reepl.show-function, z clojure.zip, tutorial-cljs.text.quil tutorial-cljs.text.quil, tutorial-cljs.repl tutorial-cljs.repl, devtools.core devtools.core, tutorial-cljs.quil-sketch tutorial-cljs.quil-sketch, repl tutorial-cljs.repl, reader cljs.tools.reader, editor tutorial-cljs.editor, reepl.show-devtools reepl.show-devtools, show-function reepl.show-function, text-webgl tutorial-cljs.text.webgl}, :uses nil, :defs {valid-reagent-start {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :line 37, :column 7, :end-line 37, :end-column 26, :arglists (quote ([val]))}, :name tutorial-cljs.core/valid-reagent-start, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :end-column 26, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, main {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :line 77, :column 7, :end-line 77, :end-column 11, :arglists (quote ([]))}, :name tutorial-cljs.core/main, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, go-to-tutorial {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :line 116, :column 7, :end-line 116, :end-column 21, :arglists (quote ([tutorial]))}, :name tutorial-cljs.core/go-to-tutorial, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :end-column 21, :method-params ([tutorial]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tutorial]))}, default-showers {:name tutorial-cljs.core/default-showers, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :line 112, :column 1, :end-line 112, :end-column 21, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :line 112, :column 6, :end-line 112, :end-column 21}}, maybe-fn-docs {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :line 97, :column 7, :end-line 97, :end-column 20, :arglists (quote ([fn]))}, :name tutorial-cljs.core/maybe-fn-docs, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :end-column 20, :method-params ([fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fn]))}, -general-setup {:name tutorial-cljs.core/-general-setup, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :line 92, :column 1, :end-line 92, :end-column 24, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :line 92, :column 10, :end-line 92, :end-column 24}}, reagent-shower {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :line 41, :column 7, :end-line 41, :end-column 21, :arglists (quote ([val]))}, :name tutorial-cljs.core/reagent-shower, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :end-column 21, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, setup-tutorial {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :line 130, :column 7, :end-line 130, :end-column 21, :arglists (quote ([name]))}, :name tutorial-cljs.core/setup-tutorial, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :end-column 21, :method-params ([name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 1, :fn-var true, :arglists (quote ([name]))}, tutorials {:name tutorial-cljs.core/tutorials, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :line 46, :column 1, :end-line 46, :end-column 15, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :line 46, :column 6, :end-line 46, :end-column 15}}, get-saved {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :line 106, :column 7, :end-line 106, :end-column 16, :arglists (quote ([name]))}, :name tutorial-cljs.core/get-saved, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :end-column 16, :method-params ([name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 1, :fn-var true, :arglists (quote ([name]))}, keyname {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :line 103, :column 7, :end-line 103, :end-column 14, :arglists (quote ([name]))}, :name tutorial-cljs.core/keyname, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :end-column 14, :method-params ([name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 1, :fn-var true, :arglists (quote ([name]))}, save-text {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :line 109, :column 7, :end-line 109, :end-column 16, :arglists (quote ([name text]))}, :name tutorial-cljs.core/save-text, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :end-column 16, :method-params ([name text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name text]))}, go-from-hash {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :line 121, :column 7, :end-line 121, :end-column 19, :arglists (quote ([]))}, :name tutorial-cljs.core/go-from-hash, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, reagent-tag {:name tutorial-cljs.core/reagent-tag, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :line 35, :column 1, :end-line 35, :end-column 17, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/rcesf6/tutorial_cljs/core.cljs", :line 35, :column 6, :end-line 35, :end-column 17}}}, :require-macros {jsc cljs.js, cljs.js cljs.js}, :cljs.analyzer/constants {:seen #{:table :ul org.processingjs.Processing :button quil.sketch reagent.core :name :td :li :tr makesketch :title :quil :textarea :div :showers gamma.api :ol quil.core quil.middleware :prelude :input :reagent gamma.program :cljs :special-forms :forms :a :text :span quil.util}, :order [:table :ul :button :td :li :tr :textarea :div :ol :input :a :span :cljs :quil :reagent :text :title :prelude :special-forms makesketch :showers org.processingjs.Processing quil.core quil.middleware quil.util quil.sketch reagent.core gamma.api gamma.program :forms :name]}, :doc nil}