;; Analyzed by ClojureScript 1.7.228
{:name parinfer.string, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {string clojure.string, clojure.string clojure.string}, :imports nil, :defs {insert-string {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/parinfer/string.cljc", :line 5, :column 7, :end-line 5, :end-column 20, :arglists (quote ([orig idx insert]))}, :name parinfer.string/insert-string, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/parinfer/string.cljc", :end-column 20, :method-params ([orig idx insert]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 3, :fn-var true, :arglists (quote ([orig idx insert]))}, remove-str-range {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/parinfer/string.cljc", :line 11, :column 7, :end-line 11, :end-column 23, :arglists (quote ([orig start end]))}, :name parinfer.string/remove-str-range, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/parinfer/string.cljc", :end-column 23, :method-params ([orig start end]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 3, :fn-var true, :arglists (quote ([orig start end]))}, get-lines {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/parinfer/string.cljc", :line 16, :column 7, :end-line 16, :end-column 16, :arglists (quote ([text])), :doc "get all lines (even empty ones)\n  source: http://stackoverflow.com/a/29614863/142317"}, :name parinfer.string/get-lines, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/tutorial-cljs/1y1r/mzbcdv/js/main.out/parinfer/string.cljc", :end-column 16, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text])), :doc "get all lines (even empty ones)\n  source: http://stackoverflow.com/a/29614863/142317"}}}